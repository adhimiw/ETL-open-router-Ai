# Generated by Django 4.2.7 on 2025-06-10 10:15

import apps.data_ingestion.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('source_type', models.CharField(choices=[('file', 'File Upload'), ('database', 'Database Connection'), ('api', 'API Endpoint'), ('url', 'URL/Web Scraping')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('archived', 'Archived')], default='pending', max_length=20)),
                ('file', models.FileField(blank=True, null=True, upload_to=apps.data_ingestion.models.upload_to, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['csv', 'xlsx', 'xls', 'json', 'parquet'])])),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=50, null=True)),
                ('db_type', models.CharField(blank=True, max_length=50, null=True)),
                ('db_host', models.CharField(blank=True, max_length=255, null=True)),
                ('db_port', models.IntegerField(blank=True, null=True)),
                ('db_name', models.CharField(blank=True, max_length=255, null=True)),
                ('db_username', models.CharField(blank=True, max_length=255, null=True)),
                ('db_password', models.CharField(blank=True, max_length=255, null=True)),
                ('db_table', models.CharField(blank=True, max_length=255, null=True)),
                ('db_query', models.TextField(blank=True, null=True)),
                ('api_url', models.URLField(blank=True, null=True)),
                ('api_method', models.CharField(blank=True, default='GET', max_length=10, null=True)),
                ('api_headers', models.JSONField(blank=True, null=True)),
                ('api_params', models.JSONField(blank=True, null=True)),
                ('api_auth_type', models.CharField(blank=True, max_length=50, null=True)),
                ('api_auth_token', models.TextField(blank=True, null=True)),
                ('rows_count', models.BigIntegerField(blank=True, null=True)),
                ('columns_count', models.IntegerField(blank=True, null=True)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('auto_refresh', models.BooleanField(default=False)),
                ('refresh_interval', models.IntegerField(default=3600)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_sources', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_sources',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataTransformation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('transformation_type', models.CharField(choices=[('clean', 'Data Cleaning'), ('filter', 'Data Filtering'), ('aggregate', 'Data Aggregation'), ('join', 'Data Joining'), ('pivot', 'Data Pivoting'), ('custom', 'Custom Transformation')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('operations', models.JSONField(default=list)),
                ('sql_query', models.TextField(blank=True, null=True)),
                ('python_code', models.TextField(blank=True, null=True)),
                ('output_rows', models.BigIntegerField(blank=True, null=True)),
                ('output_columns', models.IntegerField(blank=True, null=True)),
                ('execution_time', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transformations', to='data_ingestion.datasource')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_transformations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ETLOperation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('operation_type', models.CharField(choices=[('data_ingestion', 'Data Ingestion'), ('data_transformation', 'Data Transformation'), ('data_export', 'Data Export'), ('data_analysis', 'Data Analysis')], max_length=30)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('progress', models.IntegerField(default=0)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('execution_time', models.FloatField(blank=True, null=True)),
                ('result_data', models.JSONField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('log_messages', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='data_ingestion.datasource')),
                ('transformation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='etl_operations', to='data_ingestion.datatransformation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etl_operations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'etl_operations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataQualityReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_score', models.FloatField(default=0.0)),
                ('completeness_score', models.FloatField(default=0.0)),
                ('consistency_score', models.FloatField(default=0.0)),
                ('accuracy_score', models.FloatField(default=0.0)),
                ('validity_score', models.FloatField(default=0.0)),
                ('total_issues', models.IntegerField(default=0)),
                ('critical_issues', models.IntegerField(default=0)),
                ('high_issues', models.IntegerField(default=0)),
                ('medium_issues', models.IntegerField(default=0)),
                ('low_issues', models.IntegerField(default=0)),
                ('issues', models.JSONField(default=list)),
                ('recommendations', models.JSONField(default=list)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('processing_time', models.FloatField(default=0.0)),
                ('data_source', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='quality_report', to='data_ingestion.datasource')),
            ],
            options={
                'db_table': 'data_quality_reports',
            },
        ),
        migrations.CreateModel(
            name='DataColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('original_name', models.CharField(max_length=255)),
                ('data_type', models.CharField(choices=[('string', 'String/Text'), ('integer', 'Integer'), ('float', 'Float/Decimal'), ('boolean', 'Boolean'), ('date', 'Date'), ('datetime', 'DateTime'), ('json', 'JSON'), ('array', 'Array')], max_length=20)),
                ('is_nullable', models.BooleanField(default=True)),
                ('is_primary_key', models.BooleanField(default=False)),
                ('is_foreign_key', models.BooleanField(default=False)),
                ('null_count', models.BigIntegerField(default=0)),
                ('unique_count', models.BigIntegerField(default=0)),
                ('min_value', models.TextField(blank=True, null=True)),
                ('max_value', models.TextField(blank=True, null=True)),
                ('mean_value', models.FloatField(blank=True, null=True)),
                ('std_deviation', models.FloatField(blank=True, null=True)),
                ('quality_score', models.FloatField(default=0.0)),
                ('has_outliers', models.BooleanField(default=False)),
                ('outlier_count', models.IntegerField(default=0)),
                ('description', models.TextField(blank=True, null=True)),
                ('sample_values', models.JSONField(blank=True, null=True)),
                ('value_counts', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='data_ingestion.datasource')),
            ],
            options={
                'db_table': 'data_columns',
                'ordering': ['name'],
                'unique_together': {('data_source', 'name')},
            },
        ),
    ]
